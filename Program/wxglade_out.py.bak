#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.1 on Tue Jun 22 09:21:53 2021
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class Microscope(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: Microscope.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1280, 720))
        self.SetTitle("frame")

        self.mainPanel = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)

        self.controlPanel = wx.Panel(self.mainPanel, wx.ID_ANY)
        self.controlPanel.SetMinSize((320, 720))
        sizer_1.Add(self.controlPanel, 1, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.navigationPanel = wx.Panel(self.controlPanel, wx.ID_ANY)
        sizer_2.Add(self.navigationPanel, 1, wx.EXPAND, 0)

        grid_sizer_1 = wx.GridSizer(6, 3, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.up_button = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("D:\\Personal\\Microscope\\Program\\icons\\up_arrow_100x100.png", wx.BITMAP_TYPE_ANY), style=wx.BU_AUTODRAW | wx.BU_BOTTOM | wx.BU_EXACTFIT | wx.BU_NOTEXT)
        self.up_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.up_button, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.left_button = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("D:\\Personal\\Microscope\\Program\\icons\\left_arrow_100x100.png", wx.BITMAP_TYPE_ANY))
        self.left_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.left_button, 0, 0, 0)

        positionLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY, "\n\nPosition", style=wx.ALIGN_CENTER_HORIZONTAL)
        positionLabel.SetMinSize((100, 100))
        positionLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        grid_sizer_1.Add(positionLabel, 0, wx.ALIGN_CENTER, 0)

        self.right_button = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("D:\\Personal\\Microscope\\Program\\icons\\right_arrow_100x100.png", wx.BITMAP_TYPE_ANY))
        self.right_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.right_button, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.down_button = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("D:\\Personal\\Microscope\\Program\\icons\\down_arrow_100x100.png", wx.BITMAP_TYPE_ANY))
        self.down_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.down_button, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.focusIncrButton = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("./icons/plus_100x100.png", wx.BITMAP_TYPE_ANY))
        self.focusIncrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.focusIncrButton, 0, 0, 0)

        self.speedIncrButton = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("./icons/plus_100x100.png", wx.BITMAP_TYPE_ANY))
        self.speedIncrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.speedIncrButton, 0, 0, 0)

        self.lightIncrButton = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("./icons/plus_100x100.png", wx.BITMAP_TYPE_ANY))
        self.lightIncrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.lightIncrButton, 0, 0, 0)

        focusLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY, "\n\nFocus", style=wx.ALIGN_CENTER_HORIZONTAL)
        focusLabel.SetMinSize((100, 100))
        focusLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        grid_sizer_1.Add(focusLabel, 0, wx.ALIGN_CENTER, 0)

        speedLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY, "\n\nSpeed", style=wx.ALIGN_CENTER_HORIZONTAL)
        speedLabel.SetMinSize((100, 100))
        speedLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        grid_sizer_1.Add(speedLabel, 0, wx.ALIGN_CENTER, 0)

        lightLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY, "\n\nLight", style=wx.ALIGN_CENTER_HORIZONTAL)
        lightLabel.SetMinSize((100, 100))
        lightLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD, 0, ""))
        grid_sizer_1.Add(lightLabel, 0, wx.ALIGN_CENTER, 0)

        self.focusDecrButton = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("./icons/minus_100x100.png", wx.BITMAP_TYPE_ANY))
        self.focusDecrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.focusDecrButton, 0, 0, 0)

        self.speedDecrButton = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("./icons/minus_100x100.png", wx.BITMAP_TYPE_ANY))
        self.speedDecrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.speedDecrButton, 0, 0, 0)

        self.lightDecrButton = wx.BitmapButton(self.navigationPanel, wx.ID_ANY, wx.Bitmap("./icons/minus_100x100.png", wx.BITMAP_TYPE_ANY))
        self.lightDecrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.lightDecrButton, 0, 0, 0)

        self.capturePanel = wx.Panel(self.controlPanel, wx.ID_ANY)
        sizer_2.Add(self.capturePanel, 1, wx.EXPAND, 0)

        self.viewPanel = wx.Panel(self.mainPanel, wx.ID_ANY)
        self.viewPanel.SetMinSize((960, 720))
        sizer_1.Add(self.viewPanel, 1, wx.ALL | wx.EXPAND, 0)

        self.navigationPanel.SetSizer(grid_sizer_1)

        self.controlPanel.SetSizer(sizer_2)

        self.mainPanel.SetSizer(sizer_1)

        self.Layout()
        self.ShowFullScreen(True)

        self.Bind(wx.EVT_KEY_DOWN, self.onKey, self.mainPanel)
        self.Bind(wx.EVT_BUTTON, self.upPressed, self.up_button)
        self.Bind(wx.EVT_BUTTON, self.leftPressed, self.left_button)
        self.Bind(wx.EVT_BUTTON, self.rightPressed, self.right_button)
        self.Bind(wx.EVT_BUTTON, self.downPressed, self.down_button)
        self.Bind(wx.EVT_BUTTON, self.focusIncrPressed, self.focusIncrButton)
        self.Bind(wx.EVT_BUTTON, self.speedIncrPressed, self.speedIncrButton)
        self.Bind(wx.EVT_BUTTON, self.lightIncrPressed, self.lightIncrButton)
        self.Bind(wx.EVT_BUTTON, self.focusDecrPressed, self.focusDecrButton)
        self.Bind(wx.EVT_BUTTON, self.speedDecrPressed, self.speedDecrButton)
        self.Bind(wx.EVT_BUTTON, self.lightDecrPressed, self.lightDecrButton)
        # end wxGlade

    def onKey(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'onKey' not implemented!")
        event.Skip()

    def upPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'upPressed' not implemented!")
        event.Skip()

    def leftPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'leftPressed' not implemented!")
        event.Skip()

    def rightPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'rightPressed' not implemented!")
        event.Skip()

    def downPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'downPressed' not implemented!")
        event.Skip()

    def focusIncrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'focusIncrPressed' not implemented!")
        event.Skip()

    def speedIncrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'speedIncrPressed' not implemented!")
        event.Skip()

    def lightIncrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'lightIncrPressed' not implemented!")
        event.Skip()

    def focusDecrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'focusDecrPressed' not implemented!")
        event.Skip()

    def speedDecrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'speedDecrPressed' not implemented!")
        event.Skip()

    def lightDecrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        print("Event handler 'lightDecrPressed' not implemented!")
        event.Skip()

# end of class Microscope

class MyApp(wx.App):
    def OnInit(self):
        self.frame = Microscope(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
