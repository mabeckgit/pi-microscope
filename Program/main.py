#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.1 on Tue Jun 22 09:21:53 2021
#

import wx
import Controller


class Microscope(wx.Frame):
    #TODO: camera display. Try 1) picamera video to stream and wx.media.MediaCtrl
    #TODO: 2) The solution from reddit using OpenCV and a timer in wx.
    #TODO: 3) VLC-Python-bindings...
    def __init__(self, *args, **kwds):
        # Start Controller
        self.ctrl = Controller.Controller()

        # begin wxGlade: Microscope.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1280, 720))
        self.SetTitle("Raspberry Microscope")

        # Menu Bar
        self.main_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Save\tCtrl+S", "")
        self.Bind(wx.EVT_MENU, self.saveImage, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Exit\tCtrl+Q", "")
        self.Bind(wx.EVT_MENU, self.exitProgram, item)
        self.main_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Focus down\tE", "")
        self.Bind(wx.EVT_MENU, self.focusIncrPressed, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Focus up\tQ", "")
        self.Bind(wx.EVT_MENU, self.focusDecrPressed, item)
        wxglade_tmp_menu.AppendSeparator()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Move left\tA", "")
        self.Bind(wx.EVT_MENU, self.leftPressed, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Move right\tD", "")
        self.Bind(wx.EVT_MENU, self.rightPressed, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Move down\tS", "")
        self.Bind(wx.EVT_MENU, self.downPressed, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Move up\tW", "")
        self.Bind(wx.EVT_MENU, self.upPressed, item)
        wxglade_tmp_menu.AppendSeparator()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Speed increase\tC", "")
        self.Bind(wx.EVT_MENU, self.speedIncrPressed, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Speed decrease\tX", "")
        self.Bind(wx.EVT_MENU, self.speedDecrPressed, item)
        wxglade_tmp_menu.AppendSeparator()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Increase light\t+", "")
        self.Bind(wx.EVT_MENU, self.lightIncrPressed, item)
        item = wxglade_tmp_menu.Append(wx.ID_ANY, "Decrease light\t-", "")
        self.Bind(wx.EVT_MENU, self.lightDecrPressed, item)
        self.main_menubar.Append(wxglade_tmp_menu, "Controls")
        self.SetMenuBar(self.main_menubar)
        # Menu Bar end

        self.mainPanel = wx.Panel(self, wx.ID_ANY)
        self.mainPanel.SetFocus()

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)

        self.controlPanel = wx.Panel(self.mainPanel, wx.ID_ANY)
        self.controlPanel.SetMinSize((320, 720))
        self.controlPanel.SetMaxSize((320, 720))
        sizer_1.Add(self.controlPanel, 1, wx.EXPAND, 0)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.navigationPanel = wx.Panel(self.controlPanel, wx.ID_ANY)
        sizer_2.Add(self.navigationPanel, 1, wx.EXPAND, 0)

        grid_sizer_1 = wx.GridSizer(6, 3, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.up_button = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY,
            wx.Bitmap(
                "./icons/up_arrow_100x100.png",
                wx.BITMAP_TYPE_ANY
            ),
            style=wx.BU_AUTODRAW | wx.BU_BOTTOM | wx.BU_EXACTFIT | wx.BU_NOTEXT
        )
        self.up_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.up_button, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.left_button = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY,
            wx.Bitmap(
                "./icons/left_arrow_100x100.png",
                wx.BITMAP_TYPE_ANY)
        )
        self.left_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.left_button, 0, 0, 0)

        positionLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY,
                                      "\n\nPosition",
                                      style=wx.ALIGN_CENTER_HORIZONTAL)
        positionLabel.SetMinSize((100, 100))
        positionLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT,
                                      wx.FONTSTYLE_NORMAL,
                                      wx.FONTWEIGHT_BOLD, 0, ""))
        grid_sizer_1.Add(positionLabel, 0, wx.ALIGN_CENTER, 0)

        self.right_button = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/right_arrow_100x100.png",
                wx.BITMAP_TYPE_ANY)
        )
        self.right_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.right_button, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.down_button = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/down_arrow_100x100.png",
                wx.BITMAP_TYPE_ANY)
        )
        self.down_button.SetMinSize((100, 100))
        grid_sizer_1.Add(self.down_button, 0, 0, 0)

        grid_sizer_1.Add((0, 0), 0, 0, 0)

        self.focusIncrButton = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/plus_100x100.png", wx.BITMAP_TYPE_ANY)
        )
        self.focusIncrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.focusIncrButton, 0, 0, 0)

        self.speedIncrButton = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/plus_100x100.png", wx.BITMAP_TYPE_ANY)
        )
        self.speedIncrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.speedIncrButton, 0, 0, 0)

        self.lightIncrButton = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/plus_100x100.png", wx.BITMAP_TYPE_ANY)
        )
        self.lightIncrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.lightIncrButton, 0, 0, 0)

        focusLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY,
                                   "\n\nFocus", style=wx.ALIGN_CENTER_HORIZONTAL
                                   )
        focusLabel.SetMinSize((100, 100))
        focusLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT,
                                   wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD,
                                   0, "")
                           )
        grid_sizer_1.Add(focusLabel, 0, wx.ALIGN_CENTER, 0)

        speedLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY,
                                   "\n\nSpeed",
                                   style=wx.ALIGN_CENTER_HORIZONTAL)
        speedLabel.SetMinSize((100, 100))
        speedLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT,
                                   wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD,
                                   0, "")
                           )
        grid_sizer_1.Add(speedLabel, 0, wx.ALIGN_CENTER, 0)

        lightLabel = wx.StaticText(self.navigationPanel, wx.ID_ANY,
                                   "\n\nLight",
                                   style=wx.ALIGN_CENTER_HORIZONTAL)
        lightLabel.SetMinSize((100, 100))
        lightLabel.SetFont(wx.Font(12, wx.FONTFAMILY_DEFAULT,
                                   wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD,
                                   0, "")
                           )
        grid_sizer_1.Add(lightLabel, 0, wx.ALIGN_CENTER, 0)

        self.focusDecrButton = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/minus_100x100.png", wx.BITMAP_TYPE_ANY)
        )
        self.focusDecrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.focusDecrButton, 0, 0, 0)

        self.speedDecrButton = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/minus_100x100.png", wx.BITMAP_TYPE_ANY)
        )
        self.speedDecrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.speedDecrButton, 0, 0, 0)

        self.lightDecrButton = wx.BitmapButton(
            self.navigationPanel, wx.ID_ANY, wx.Bitmap(
                "./icons/minus_100x100.png", wx.BITMAP_TYPE_ANY)
        )
        self.lightDecrButton.SetMinSize((100, 100))
        grid_sizer_1.Add(self.lightDecrButton, 0, 0, 0)

        self.capturePanel = wx.Panel(self.controlPanel, wx.ID_ANY)
        sizer_2.Add(self.capturePanel, 1, wx.EXPAND, 0)

        self.viewPanel = wx.Panel(self.mainPanel, wx.ID_ANY)
        self.viewPanel.SetMinSize((960, 720))

        # Microscope viewer


        sizer_1.Add(self.viewPanel, 1, wx.ALL | wx.EXPAND, 0)

        self.navigationPanel.SetSizer(grid_sizer_1)

        self.controlPanel.SetSizer(sizer_2)

        self.mainPanel.SetSizer(sizer_1)

        self.Layout()
        self.ShowFullScreen(True)

        self.Bind(wx.EVT_BUTTON, self.upPressed, self.up_button)
        self.Bind(wx.EVT_BUTTON, self.leftPressed, self.left_button)
        self.Bind(wx.EVT_BUTTON, self.rightPressed, self.right_button)
        self.Bind(wx.EVT_BUTTON, self.downPressed, self.down_button)
        self.Bind(wx.EVT_BUTTON, self.focusIncrPressed, self.focusIncrButton)
        self.Bind(wx.EVT_BUTTON, self.speedIncrPressed, self.speedIncrButton)
        self.Bind(wx.EVT_BUTTON, self.lightIncrPressed, self.lightIncrButton)
        self.Bind(wx.EVT_BUTTON, self.focusDecrPressed, self.focusDecrButton)
        self.Bind(wx.EVT_BUTTON, self.speedDecrPressed, self.speedDecrButton)
        self.Bind(wx.EVT_BUTTON, self.lightDecrPressed, self.lightDecrButton)
        # end wxGlade

    def saveImage(self, event):
        print("Event handler 'saveImage' not implemented!")
        # event.Skip()

    def exitProgram(self, event):
        print("Event handler 'exitProgram' not implemented!")
        self.Close()

    def upPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.moveY(down=False)

    def leftPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.moveX(left=True)

    def rightPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.moveX(left=False)

    def downPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.moveY(down=True)

    def focusIncrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.moveFocus(down=True)

    def speedIncrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.increaseSpeed()

    def lightIncrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.increaseLight()

    def focusDecrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.moveFocus(down=False)

    def speedDecrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.decreaseSpeed()

    def lightDecrPressed(self, event):  # wxGlade: Microscope.<event_handler>
        self.ctrl.decreaseLight()


# end of class Microscope

class MyApp(wx.App):
    def OnInit(self):
        self.frame = Microscope(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True


# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
